on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    outputs:
      path-info: ${{ steps.build.outputs.path-info }}
    steps:
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: actions/checkout@v4
      - id: build
        env:
          installable: .#example^*
        run: |
          set -o pipefail
          pathInfo=$(nix --accept-flake-config build --print-build-logs --print-out-paths "$installable" | xargs nix path-info --json | jq -c 'to_entries')
          echo "path-info=$pathInfo" >> "$GITHUB_OUTPUT"
      - uses: actions/upload-artifact@v4
        with:
          name: provenance
          path: /nix/var/nix/provenance/*
      # NOTE: the attestation contains multiple subjects (one for each output)
      # but the actions/attest action only supports one subject. So we need to
      # pick one. We pick the first one.
      # TODO: Make a custom action for this that does support multiple actions
      # NOTE: We're using the NAR hash here, not the SRI hash. So a verifier should
      # get the NAR serialisation of the nix store path for verification.
      - id: get-subject
        run:  |
          set -o pipefail
          narHash=$(jq -r '.[0].value.narHash' "$statementPath")
          subjectDigest=$(nix hash convert --to base16 "$narHash")
          subjectName=$(jq -r '.[0].key' "$statementPath")
          echo "subject-digest=sha256:$subjectDigest" >> "$GITHUB_OUTPUT"
          echo "subject-name=$subjectName" >> "$GITHUB_OUTPUT"
          jq '.predicate' "$statementPath" > predicate.slsa.json
        env:
          statementPath: "/nix/var/nix/provenance/${{fromJson(steps.build.outputs.path-info)[0].value.deriver}}.slsa.json"
      - uses: actions/attest@v2
        with:
          subject-name: ${{ steps.get-subject.outputs.subject-name }}
          # NOTE: This is the NAR hash, not the SRI hash. So a verifier should
          # get the NAR serialisation of the nix store path
          # TODO: Should we name NAR files differently?
          subject-digest: ${{ steps.get-subject.outputs.subject-digest }}
          predicate-type: https://slsa.dev/provenance/v1
          predicate-path: predicate.slsa.json
